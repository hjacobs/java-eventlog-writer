<?xml version='1.0' encoding='UTF-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <artifactId>zalando-parent</artifactId>
        <groupId>de.zalando</groupId>
        <version>2.1.19</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <groupId>de.zalando.mentoring.example</groupId>
    <artifactId>example-minimal-job-default-scheduler-backend</artifactId>
    <packaging>war</packaging>
    <name>Example Job Framework Backend</name>
    <version>0.1-SNAPSHOT</version>
    <description>Job Framework backend</description>
    <organization>
        <name>Zalando/Technology/Platform</name>
    </organization>
    <properties>
        <test.src.dir>src/test/java</test.src.dir>
        <!-- Sonar -->
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <!-- The destination file for the code coverage report has to be set to the same value
             in the parent pom and in each module pom. Then JaCoCo will add up information in
             the same report, so that, it will give the cross-module code coverage. -->
        <sonar.jacoco.itReportPath>${project.basedir}/target/jacoco-it.exec</sonar.jacoco.itReportPath>
        <sonar.language>java</sonar.language>
    </properties>
    <build>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.6.2.201302030002</version>
                <executions>
                    <execution>
                    </execution>
                    <execution>
                        <id>pre-integration-test</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.basedir}/target/jacoco-it.exec</destFile>
                            <propertyName>failsafe.argLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.basedir}/target/jacoco-it.exec</dataFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
         </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>de.zalando</groupId>
            <artifactId>zomcat-appconfig</artifactId>
        </dependency>
        <dependency>
            <groupId>de.zalando</groupId>
            <artifactId>zomcat-job-monitor-backend</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
    </dependencies>
    <profiles>
        <profile>
            <id>development</id>
            <properties>
                <!-- Skip unit tests for local development -->
                <maven.test.skip>true</maven.test.skip>
            </properties>
        </profile>
        <profile>
            <id>integration-test</id>
            <properties>
                <test.db.name>local_example_db</test.db.name>
                <unit.test.skip>false</unit.test.skip>
                <test.src.dir>src/test/java</test.src.dir>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skipTests>${unit.test.skip}</skipTests>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                        <execution>
                            <id>verify</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                            <execution>
                                <id>integration-test</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>integration-test</id>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                   </plugins>
            </build>
        </profile>
      </profiles>
</project>
