Wie wir es in Purchasing bisher gemacht haben


    /*
     * Snapshots next Phase
     *
     * @OneToMany(cascade = CascadeType.REFRESH, mappedBy = "purchaseOrder")
     * private List<PurchaseOrderSnapshot> purchaseOrderSnapshotList;
     */
    // TODO: add validator to ensure only 3 manual discounts with deleted flag FALSE
    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true)
    @JoinTable(
        name = "zpu_data.manual_discount_po", joinColumns = @JoinColumn(name = "mdp_purchase_order_id"),
        inverseJoinColumns = @JoinColumn(name = "mdp_manual_discount_id")
    )
    private List<ManualDiscount> manualDiscounts = Lists.newArrayList();

    @NotNull
    @JoinColumn(name = "poh_order_type_id", referencedColumnName = "pot_id")
    @ManyToOne
    private PurchaseOrderType purchaseOrderType;

    @NotNull
    @JoinColumn(name = "supplier_id")
    @ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.REFRESH)
    private Supplier supplier;

    @NotNull
    @JoinColumn(name = "organization_id")
    @ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.REFRESH)
    private Organization organization;

    @NotNull
    @JoinColumn(name = "business_unit_id")
    @ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.REFRESH)
    private BusinessUnit businessunit;

    @NotNull
    @JoinColumn(name = "sub_pool_id")
    @ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.REFRESH)
    private SubPool subPool;


// compare length of generated fks, both are 51 characters

functionalgroupexternalsystemfgesexternalsystemsid

FK_host_database_instance_hdi_databaseinstances_id