<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>de.zalando</groupId>
        <artifactId>playground</artifactId>
        <version>1.4.0-SNAPSHOT</version>
    </parent>
    <groupId>de.zalando</groupId>
    <artifactId>spring-data-jpa-example</artifactId>
    <name>Zomcat JPA Examples</name>
    <description>Example how to use zomcat-jpa</description>
    <organization>
        <name>Zalando/Technology/Platform</name>
    </organization>
    <properties>
        <test.db.host>localhost</test.db.host>
        <test.db.port>5432</test.db.port>
        <test.db.name>zalando_test</test.db.name>
        <test.src.dir>src/test/java</test.src.dir>
        <!-- Sonar -->
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <!-- The destination file for the code coverage report has to be set to the same value
             in the parent pom and in each module pom. Then JaCoCo will add up information in
             the same report, so that, it will give the cross-module code coverage. -->
        <sonar.jacoco.itReportPath>${project.basedir}/target/jacoco-it.exec</sonar.jacoco.itReportPath>
        <sonar.jacoco.reportPath>${project.basedir}/target/jacoco.exec</sonar.jacoco.reportPath>
        <sonar.language>java</sonar.language>
    </properties>
    <dependencies>
        <dependency>
            <groupId>de.zalando</groupId>
            <artifactId>spring-data-jpa-extensions</artifactId>
            <version>1.4.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>de.zalando</groupId>
            <artifactId>spring-data-jpa-java-config</artifactId>
            <version>1.4.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>de.zalando</groupId>
            <artifactId>zomcat-jpa-eclipselink</artifactId>
            <version>1.4.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${jodatime.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jolbox</groupId>
            <artifactId>bonecp-spring</artifactId>
            <version>0.7.1.RELEASE-ZAL-6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>1.8.0.10</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.0-801-ZAL-4</version>
        </dependency>
        <dependency>
            <groupId>de.zalando</groupId>
            <artifactId>zalando-db-commons</artifactId>
        </dependency>
    </dependencies>
    <build>
    <plugins>
      <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.6.2.201302030002</version>
                <executions>
                    <execution>
                        <id>pre-integration-test</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.basedir}/target/jacoco-it.exec</destFile>
                            <propertyName>failsafe.argLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.basedir}/target/jacoco-it.exec</dataFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        <plugin>
                <groupId>de.zalando</groupId>
                <artifactId>zalando-deploy-db-artifacts-plugin</artifactId>
                <executions>
                    <execution>
                        <id>cleanDbArtifacts</id>
                        <configuration>
                            <removeEmptyDirectories>true</removeEmptyDirectories>
                        </configuration>
                    </execution>
                    <execution>
                        <id>deployDbArtifacts</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>deployDbArtifacts</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>de.zalando</groupId>
                                    <artifactId>zalando-db-commons</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>database/purchase</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>de.zalando</groupId>
                                    <artifactId>zomcat-job</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>database/purchase</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>de.zalando</groupId>
                                    <artifactId>zalando-commons</artifactId>
                                    <version>13.16-SNAPSHOT</version>
                                    <dbPathInArtifact>database/shared</dbPathInArtifact>
                                    <outputDirectory>database/purchase</outputDirectory>
                                    <includes>**/00_setup/**</includes>
                                </artifactItem>
                            </artifactItems>
                            <gitIgnore>../.gitignore</gitIgnore>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>integration-test</id>
            <properties>
                <test.db.name>local_zomcat_jpa_db</test.db.name>
                <jacoco.agent.version>0.5.1.20110327142208</jacoco.agent.version>
                <jacoco.agent.path>${project.build.directory}/jacocoagent-${jacoco.agent.version}.jar</jacoco.agent.path>
                <jacoco.file.path>${project.build.directory}/jacoco/jacoco.exec</jacoco.file.path>
                <unit.test.skip>false</unit.test.skip>            </properties>
            <build>
                <plugins>
                  <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>verify</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>integration-test</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>prepare-agent</goal>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skipTests>${unit.test.skip}</skipTests>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <reportsDirectory>${project.basedir}/target/failsafe-reports</reportsDirectory>
                            <systemPropertyVariables>                                <frontend.sproc.datasource.username>postgres</frontend.sproc.datasource.username>
                                <frontend.sproc.datasource.password>postgres</frontend.sproc.datasource.password>
                                <frontend.sproc.datasource.url>
                                    jdbc:postgresql://${test.db.host}:${test.db.port}/${test.db.name}
                                </frontend.sproc.datasource.url>
                            </systemPropertyVariables>
                            <argLine>${failsafe.argLine}</argLine>
                        </configuration>
                        <executions>
                            <execution>
                                <id>integration-test</id>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.4</version>
                        <dependencies>
                            <dependency>
                                <groupId>postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>9.0-801-ZAL-4</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <driver>org.postgresql.Driver</driver>
                            <url>jdbc:postgresql://${test.db.host}:${test.db.port}/${test.db.name}</url>
                            <settingsKey>testdb</settingsKey>
                            <skip>${maven.test.skip}</skip>
                        </configuration>
                        <executions>
                            <execution>
                                <id>create-db</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <url>jdbc:postgresql://${test.db.host}:${test.db.port}/postgres</url>
                                    <autocommit>true</autocommit>
                                    <sqlCommand> CREATE DATABASE
                                        local_zomcat_jpa_db TEMPLATE
                                        template1;
                                    </sqlCommand>
                                    <onError>continue</onError>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create-data</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <delimiterType>row</delimiterType>
                                    <keepFormat>true</keepFormat>
                                    <orderFile>ascending</orderFile>
                                    <fileset>
                                        <basedir>${basedir}</basedir>
                                        <includes>
                                            <include>database/**/*.sql</include>
                                        </includes>
                                    </fileset>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>